<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xupt.tlms.tlmsprovider.Dao.CommentDao">
    <resultMap id="BaseResultMap" type="com.xupt.tlms.vojo.CommentVo">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="content" property="content"  />
        <result column="user_id" property="userId"/>
        <result column="nick_name" property="nickName" />
        <result column="create_time" property="createTime"/>
        <result column="notes_id" property="notesId"/>
        <result column="notes_content" property="notesContent"/>
        <result column="status" property="status"/>
    </resultMap>


    <insert id="insert" parameterType="com.xupt.tlms.pojo.Comment">
        insert into comment (content,user_id,create_time,notes_id,status)
        values(#{content},#{userId},#{createTime},#{notesId},#{status})
    </insert>

    <select id="findAllCommentByNotesId" parameterType="int" resultMap="BaseResultMap">
        select a.* , b.nick_name ,c.content notes_content from `comment` a , users b , notes c where a.notes_id = #{notesId}
        and a.user_id = b.id and a.notes_id = c.id
    </select>

    <select id="findMyComment" parameterType="int" resultMap="BaseResultMap">
select a.* , b.nick_name ,c.content notes_content from `comment` a , users b , notes c where a.user_id = #{userId}
and a.user_id = b.id and a.notes_id = c.id
    </select>

    <delete id="delete" parameterType="int">
        delete from comment where id = #{id}
    </delete>
    <select id="findById" parameterType="int" resultMap="BaseResultMap">
        select * from
 (select * from `comment` where id = #{id}) A join (select * from users ) B on A.user_id = B.id
	join (select * from notes) C on A.notes_id = C.id
    </select>
</mapper>

